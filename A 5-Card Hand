// Author : Muhammad Asad Naveed
// U.No :  3035957848
// Assignment 1 Question 4
// Description : A C++ Program to generate a random hand of FIVE poker cards from the deck of 52 poker cards, and determine the type of poker hand it is.


#include <iostream>
#include <cstdlib>      // for calling srand(), rand()
#include <ctime>        // for calling time()
#include <string>       //include string 

#define SPADE   "\xE2\x99\xA0"
#define CLUB    "\xE2\x99\xA3"
#define HEART   "\xE2\x99\xA5"
#define DIAMOND "\xE2\x99\xA6"
#define NUMCARDS  5

using namespace std;



void DealHand(int cards[])   //generating 5 random number, each representing a card in a 52-card deck
{
  for(int i=0; i<=4; i++)
  {
    cards[i]=rand()%52;     //The first five numbers generated by the RNG should be stored in the array cards[] in order
  }

}

void PrintHand(int cards[])    // The function PrintHand() should print a hand stored in cards[] . For example, if cards[0] == 0 , cards[1] == 25 , cards[2] == 14 , cards[3] == 50 , cards[4] == 36 , the line A♠ K♥ 2♥ Q♦ J♣ should be output to the screen.
{
  int rank;

  string availableranks[20] = {"A","2","3","4","5","6","7","8","9","10","J","Q","K"};
  for(int i=0; i<=4; i++)      // card number are checked and alloted to rank accordingly
  {
    if(cards[i]<13)          //if belongs to spade
    {
      rank= cards[i]%13;
      cout<<availableranks[rank]<< SPADE << " ";
    }

    else if(cards[i]>=13 && cards[i]<26)   //else if belongs to heart
    {
      rank= cards[i]%13;
      cout<<availableranks[rank]<< HEART << " ";
    }

    else if(cards[i]>=26 && cards[i]<39)  //condition to belong to club
    {
      rank= cards[i]%13;
      cout<<availableranks[rank]<< CLUB << " ";
    }

    else                                 //otherwise belongs to diamond
    {
      rank= cards[i]%13;
      cout<<availableranks[rank]<< DIAMOND << " ";
    }
  }
  cout<<endl;
}


bool IsFourOfAKind(int cards[])           // return if the hand is a four of a kind
{
  int counter = 1;   // to keep track of cards of same kind


  if (cards[0]%13 ==  cards[1]%13)       //cards are compared one by one  with eachother
  {
    for (int i = 1; i < NUMCARDS; i++)
      if ( cards[0]%13 ==  cards[i]%13)
      {
        counter++;
      }
  }    

  else if(cards[0]%13 == cards[2]%13)       //check if card 0 is similar to card 2 and after that
  {
    for (int j = 1; j < NUMCARDS; j++)
    {
      if(cards[0]%13 == cards[j+1]%13)
      {
        counter++;
      }
    }  
  }

  else
  {
    for (int x = 1; x < NUMCARDS; x++)
    {
      if(cards[1]%13 == cards[x+1]%13)
      {
        counter++;
      }
    }
  }
  
  if(counter==4)                               //if same rank cards found return true
  {
    return true;
  }
  else
  {
    return false;
  }

}


bool IsFullHouse(int cards[])    // return if the hand is a full house, 3 cards of one ranke and 2 of another
{
  int list1=0;
  int other;
  int list2=0;
  for(int i=1; i<=4; i++)
  {
    if(cards[0]%13==cards[i]%13)     //cards compared if simmilar added to list1
    {
      list1++;  
    }
    else
    {
      other=cards[i];              //if cards not simmilar alloted to 'other' variable
    }
  
  }
  for(int j=0; j<=4; j++)          //loop to compare cards with the 'other' card if same added tolist2
  {
    if(other%13==cards[j]%13)
    {
      list2++;
    }
  }
  if ((list1==2 && list2==2)||(list1==1 && list2==3))
  { 
    return true;
  }
  return false;

}


bool IsFlush(int cards[]) // return if the hand is a flush
{                         //checks for suits
  int club, spade, heart, diamond;

  for(int i=0; i<=4; i++)           //loop to go through the cards
  {
    if(cards[i]>=0 && cards[i]<=12)
    {
      spade++;
    }

    else if (cards[i]>=13 && cards[i]<=25)
    {
      heart++;
    }

    else if (cards[i]>=26 && cards[i]<=38)
    {
      club++;
    }

    else if(cards[i]>=39 && cards[i]<=51)
    {
      diamond++;
    }
    

  }
  if ( heart == 5 || spade == 5 || club == 5 || diamond == 5)
  {

    return true;

  }

  else
  {

    return false;

  }


}



bool IsThreeOfAKind(int cards[]) // return if the hand is a three of a kind
{
  int count = 0;   // to keep track of cards of same kind

  for (int i = 0; i < NUMCARDS; i++)    // loop to compare the cards
  {  

    for ( int j = i+1; j < NUMCARDS; j++)
    {
      if ( cards[i]%13 ==  cards[j]%13)
	    {
        count++;

	    }

    }

    if ( count == 3)     //if equal to 2 means 2 cards equal returns true
    {

      return true;

    }

    }
  return false;  
}

bool IsTwoPair(int cards[]) // return if the hand is a two pair
{
    int counter =0;

    for (int i=0;i<NUMCARDS;i++)   //check for similar cards.
    {
        for (int j=i+1;j<NUMCARDS;j++)
        {
            if (cards[i]%13 == cards[j]%13)
            {
                counter++;
            }
        }
    }

    if (counter == 2)    //if 2 pair found
    {  
      return true;

    }
    return false;

}
  

bool IsOnePair(int cards[]) // return if the hand is a four of a kind
{


    int counter = 0;   // to keep track of cards of same kind
    for (int i = 0; i < NUMCARDS; i++)        //check for similar cards.
    {  

        for ( int j = 0; j < NUMCARDS; j++)
        {

        if ( j != i)
        {

            if ( cards[j]%13 ==  cards[i]%13)
            {

                counter++;

            }

        }
        }  

    if ( counter == 1) //if one pair found
    {

        return true;

    }

    }
    return false;
}


/////////////////////////////////////MAIN FUNCTION///////////////////////////////////////////////
int main()
{
  int hand[NUMCARDS], randomnumber;   // declare an array of 5 integers to store a hand 

  cin>>randomnumber;                  //takes number from user
  srand(randomnumber);
  DealHand(hand);                    //function to generate random numbers
  PrintHand(hand);                   //function to print cards
                                     //these if else statements tell the user what kind of cards and hand he has

  if (IsFourOfAKind(hand)){
      cout << "four of a kind" << endl;
  }
  else if (IsFullHouse(hand)){
      cout << "full house" << endl;
  }
  else if (IsThreeOfAKind(hand)){
      cout << "three of a kind" << endl;
  }
  else if (IsTwoPair(hand)){
      cout << "two pair" << endl;
  }
  else if (IsOnePair(hand)){
      cout<<"one pair" << endl;
  }
   else if (IsFlush(hand)){
      cout << "Flush" << endl;
  }
  else{
      cout << "others" << endl;
  }
}
